name: Deploy to Production
# Gatilho: Roda este workflow toda vez que houver um push no branch 'main'
on:
  push:
    branches: [ "main" ]

# Tarefas que serão executadas
jobs:
  deploy:
    # O tipo de máquina virtual que o nosso "robô" vai usar
    runs-on: ubuntu-latest

    # Os passos da receita
    steps:
      # 1. Pega o código mais recente do seu repositório
      - name: Checkout code
        uses: actions/checkout@v4

      # 2. Conecta no seu servidor via SSH e executa os comandos de deploy
      - name: Deploy to Server
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.SSH_HOST }}
          username: ${{ secrets.SSH_USERNAME }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          port: 22
          script: |
            # Navega para a pasta do projeto
            cd /home/ubuntu/TrabalhoFinal/
            
            # Puxa as atualizações do repositório
            git pull
            
            # Para os contêineres atuais para evitar conflitos
            docker compose down
            
            # Sobe os contêineres, reconstruindo a imagem se necessário
            docker compose up -d --build
            
            # Roda os comandos do Laravel para finalizar
            docker compose exec app php artisan migrate --force
            docker compose exec app php artisan optimize:clear
            docker compose exec app php artisan config:cache
            docker compose exec app php artisan route:cache
            docker compose exec app php artisan view:cache
            
            # Garante as permissões corretas
            docker compose exec app chown -R www-data:www-data storage bootstrap/cache