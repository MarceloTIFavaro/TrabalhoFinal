name: Deploy to Production

on:
  push:
    branches: [ "main" ]

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Deploy to Server
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.SSH_HOST }}
          username: ${{ secrets.SSH_USERNAME }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          port: 22
          script: |
            cd /home/ubuntu

            # Clona o repositório se a pasta TrabalhoFinal não existir
            if [ ! -d TrabalhoFinal ]; then
              git clone git@github.com:seu-usuario/seu-repo.git TrabalhoFinal
            fi

            cd TrabalhoFinal

            # Marca o repo como seguro para o git (evita erro)
            git config --global --add safe.directory /home/ubuntu/TrabalhoFinal

            # Puxa as últimas mudanças
            git pull

            # Cria o arquivo .env baseado no secret do GitHub
            echo "${{ secrets.LARAVEL_ENV }}" | tee .env > /dev/null

            # Para os containers (se estiverem rodando)
            docker compose down

            # Sobe os containers com build e dettach
            docker compose up -d --build

            # Espera o banco subir
            sleep 15

            # Roda os comandos Laravel
            docker compose exec app php artisan migrate --force
            docker compose exec app php artisan optimize:clear
            docker compose exec app php artisan config:cache
            docker compose exec app php artisan route:cache
            docker compose exec app php artisan view:cache

            # Ajusta permissões
            docker compose exec app chown -R www-data:www-data storage bootstrap/cache
